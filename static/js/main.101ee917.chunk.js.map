{"version":3,"sources":["App.module.css","components/Statistics/index.jsx","components/FeedbackOptions/index.js","components/Section/index.jsx","components/Notification/index.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","bad","neutral","total","percentage","FeedbackOptions","feedbackAction","this","props","name","onClick","Component","Section","children","title","Notification","message","App","state","evt","target","setState","prevState","mathPercentage","Math","floor","className","styles","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,yB,yJC0BfC,MAxBf,YAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC/C,OACE,+BACE,6BACE,sCAASJ,OAEX,6BACE,yCAAYE,OAEd,6BACE,qCAAQD,OAEV,6BACE,uCAAUE,OAEZ,6BACE,oDAAuBC,EAAvB,aCEOC,EAnBf,uKACY,IACAC,EAAmBC,KAAKC,MAAxBF,eACR,OACE,qCACE,wBAAQG,KAAK,OAAOC,QAASJ,EAA7B,kBAGA,wBAAQG,KAAK,UAAUC,QAASJ,EAAhC,qBAGA,wBAAQG,KAAK,MAAMC,QAASJ,EAA5B,wBAXR,GAAqCK,aCctBC,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC3B,OACE,oCACE,6BAAKA,IACJD,MCIQE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,K,iBCgDEC,EA9Cf,4MACEC,MAAQ,CACNlB,KAAM,EACNE,QAAS,EACTD,IAAK,GAJT,EAMEK,eAAiB,SAACa,GAChB,IAAMV,EAAOU,EAAIC,OAAOX,KACxB,EAAKY,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,kBAEGb,EAAOa,EAAUb,GAAQ,QAXlC,EAeEc,eAAiB,WACf,OAAOC,KAAKC,MACS,IAAlB,EAAKP,MAAMlB,MACT,EAAKkB,MAAMlB,KAAO,EAAKkB,MAAMhB,QAAU,EAAKgB,MAAMjB,OAlB3D,uDAsBI,IAAME,EAAQI,KAAKW,MAAMlB,KAAOO,KAAKW,MAAMhB,QAAUK,KAAKW,MAAMjB,IAChE,OACE,sBAAKyB,UAAWC,IAAOC,UAAvB,UACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBR,eAAgBC,KAAKD,mBAExC,cAAC,EAAD,CAASQ,MAAM,aAAf,SACa,IAAVX,EACC,cAAC,EAAD,CACEH,KAAMO,KAAKW,MAAMlB,KACjBE,QAASK,KAAKW,MAAMhB,QACpBD,IAAKM,KAAKW,MAAMjB,IAChBE,MAAOA,EACPC,WAAYG,KAAKgB,mBAGnB,cAAC,EAAD,CAAcP,QAAQ,+BAtClC,GAAyBL,aCDzBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.101ee917.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Statistics({ good, bad, neutral, total, percentage }) {\n  return (\n    <ul>\n      <li>\n        <p>Good:{good}</p>\n      </li>\n      <li>\n        <p>Neutral:{neutral}</p>\n      </li>\n      <li>\n        <p>Bad:{bad}</p>\n      </li>\n      <li>\n        <p>Total:{total}</p>\n      </li>\n      <li>\n        <p>Postitive feedback:{percentage}%</p>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {};\n\nexport default Statistics;\n","import React, { Component } from \"react\";\n\nexport class FeedbackOptions extends Component {\n  render() {\n    const { feedbackAction } = this.props;\n    return (\n      <>\n        <button name=\"good\" onClick={feedbackAction}>\n          Good\n        </button>\n        <button name=\"neutral\" onClick={feedbackAction}>\n          Neutral\n        </button>\n        <button name=\"bad\" onClick={feedbackAction}>\n          Bad\n        </button>\n      </>\n    );\n  }\n}\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Section({ children, title }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\nimport styles from \"./App.module.css\";\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  feedbackAction = (evt) => {\n    const name = evt.target.name;\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n  mathPercentage = () => {\n    return Math.floor(\n      (this.state.good * 100) /\n        (this.state.good + this.state.neutral + this.state.bad)\n    );\n  };\n  render() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return (\n      <div className={styles.container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions feedbackAction={this.feedbackAction} />\n        </Section>\n        <Section title=\"Statistics\">\n          {total !== 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              percentage={this.mathPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}